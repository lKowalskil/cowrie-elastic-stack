services:
  cowrie:
    image: cowrie/cowrie
    ports:
      - "22:22"
      - "23:23"
      - "2222:2222"
      - "2323:2323"
    volumes:
      - ./cowrie/config:/cowrie/cowrie-git/etc
      - ./cowrie/downloads:/cowrie/cowrie-git/var/lib/cowrie/downloads
      - ./cowrie/log:/cowrie/cowrie-git/var/log/cowrie
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - elastic

  dionaea:
    image: dinotools/dionaea
    ports:
      - "21:21"
      - "42:42"
      - "69:69/udp"
      - "80:80"
      - "443:443"
      - "445:445"
      - "1433:1433"
      - "1723:1723"
      - "1883:1883"
      - "3306:3306"
      - "5060:5060"
      - "5060:5060/udp"
      - "11211:11211"
    volumes:
      - ./dionaea/log:/opt/dionaea/var/log/dionaea
      - ./dionaea/config:/opt/dionaea/etc/dionaea/dionaea.cfg:ro
    networks:
      - elastic

  elasticsearch:
    build: ./elasticsearch
    environment:
      ES_JAVA_OPTS: -Xms256m -Xmx256m
      discovery.type: single-node
    ports:
      - "9200:9200"
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - elasticsearch:/usr/share/elasticsearch/data
    networks:
      - elastic
  kibana:
    build: ./kibana
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    depends_on:
      - elasticsearch
    networks:
      - elastic
  logstash:
    build: ./logstash
    ports:
      - "5044:5044"
    volumes: 
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
    depends_on:
      - elasticsearch
    networks:
      - elastic
  filebeat:
    build: ./filebeat
    user: root
    volumes:
      - ./cowrie/log:/cowrie-logs:ro
      - ./dionaea/log:/dionaea-logs:ro
      - ./filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml
      # Добавляем доступ к логам docker для отладки
      - /var/log:/host-logs:ro
    depends_on:
      - elasticsearch
      - logstash
    networks:
      - elastic
  logcheck:
    image: alpine:latest
    command: sh -c "while true; do echo '=== Cowrie Logs ==='; ls -la /cowrie-logs/; echo '=== Dionaea Logs ==='; ls -la /dionaea-logs/; sleep 10; done"
    volumes:
      - ./cowrie/log:/cowrie-logs:ro
      - ./dionaea/log:/dionaea-logs:ro
    networks:
      - elastic
volumes:
  elasticsearch:

networks:
  elastic:
